From 3c2816b98d001a0a9c2b5e02bb2a05413bb214b3 Mon Sep 17 00:00:00 2001
From: Alex Ermolov <aaermolov@gmail.com>
Date: Wed, 25 Aug 2021 19:10:08 +0300
Subject: [PATCH] restored working version from blob

---
 hints.lua | 60 ++++++++++++++++++++++++++++++++++++++++++-------------
 1 file changed, 46 insertions(+), 14 deletions(-)

diff --git a/hints.lua b/hints.lua
index fc9f33b..cc6739a 100644
--- a/hints.lua
+++ b/hints.lua
@@ -6,19 +6,22 @@ local pairs     = pairs
 local beautiful = require("beautiful")
 local wibox     = require("wibox")
 
-module("hints")
 
-charorder = "jkluiopyhnmfdsatgvcewqzx1234567890"
+local hints = {}
+
+charorder = "asdfghjkl"
 hintbox = {} -- Table of letter wiboxes with characters as the keys
 
+fontcolor_fallback = "red"
+
 function debuginfo( message )
   nid = naughty.notify({ text = message, timeout = 10 })
 end
 
 -- Create the wiboxes, but don't show them
-function init()
+function hints.init()
   hintsize = 60
-  local fontcolor = beautiful.fg_normal
+  local fontcolor = beautiful.fg_normal or fontcolor_fallback
   local letterbox = {}
   for i = 1, #charorder do
     local char = charorder:sub(i,i)
@@ -27,34 +30,63 @@ function init()
     hintbox[char].width = hintsize
     hintbox[char].height = hintsize
     letterbox[char] = wibox.widget.textbox()
-    letterbox[char]:set_markup("<span color=\"" .. beautiful.fg_normal .. "\"" .. ">" .. char.upper(char) .. "</span>")
+    letterbox[char]:set_markup("<span color=\"" .. fontcolor .. "\"" .. ">" .. char.upper(char) .. "</span>")
     letterbox[char]:set_font("dejavu sans mono 40")
     letterbox[char]:set_align("center")
     hintbox[char]:set_widget(letterbox[char])
   end
 end
 
-function focus()
+function hints.focus()
   local hintindex = {} -- Table of visible clients with the hint letter as the keys
   local clientlist = awful.client.visible()
   for i,thisclient in pairs(clientlist) do -- Move wiboxes to center of visible windows and populate hintindex
     local char = charorder:sub(i,i)
-    hintindex[char] = thisclient
-    local geom = thisclient.geometry(thisclient)
-    hintbox[char].visible = true
-    hintbox[char].x = geom.x + geom.width/2 - hintsize/2
-    hintbox[char].y = geom.y + geom.height/2 - hintsize/2
-    hintbox[char].screen = thisclient.screen
+    if char and char ~= '' then
+        hintindex[char] = thisclient
+        local geom = thisclient:geometry()
+            hintbox[char].visible = true
+            hintbox[char].x = math.floor(geom['x'] + geom['width']/2 - hintsize/2)
+            hintbox[char].y = math.floor(geom.y + geom.height/2 - hintsize/2)
+            hintbox[char].screen = thisclient.screen
+    end
   end
   keygrabber.run( function(mod,key,event)
     if event == "release" then return true end
     keygrabber.stop()
-    if hintindex[key] then 
+    if hintindex[key] then
       client.focus = hintindex[key]
+      awful.screen.focus(hintindex[key].screen)
       hintindex[key]:raise()
-    end 
+    end
     for i,j in pairs(hintindex) do
       hintbox[i].visible = false
     end
   end)
+
 end
+
+--function debuginfo( message )
+    --if type(message) == "table" then
+        --for k,v in pairs(message) do
+            --naughty.notify({ text = "key: "..k.." value: "..tostring(message), timeout = 10 })
+        --end
+    --else
+        --nid = naughty.notify({ text = message, timeout = 10 })
+    --end
+--end
+
+local function debuginfo( message )
+
+    mm = message
+
+    if not message then
+        mm = "false"
+    end
+
+    nid = naughty.notify({ text = tostring(mm), timeout = 10 })
+end
+
+setmetatable(hints, { __call = function(_, ...) return hints.focus(...) end })
+
+return hints
-- 
2.32.0

